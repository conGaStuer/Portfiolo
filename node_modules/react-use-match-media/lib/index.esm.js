import { useLayoutEffect, useState } from 'react';
import invariant from 'tiny-invariant';

var useBrowserLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : function () {};

var useMatchMedia = function useMatchMedia(mediaQueryString, initialState) {
  if (initialState === void 0) {
    initialState = false;
  }

  !(typeof mediaQueryString === 'string') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected `mediaQueryString` to be a string') : invariant(false) : void 0;
  !(typeof initialState === 'boolean') ? process.env.NODE_ENV !== "production" ? invariant(false, 'Expected `initialState` to be a boolean') : invariant(false) : void 0;

  var _useState = useState(initialState),
      state = _useState[0],
      setState = _useState[1];

  useBrowserLayoutEffect(function () {
    if (window.matchMedia) {
      var mediaQueryList = window.matchMedia(mediaQueryString);

      var updateState = function updateState() {
        setState(mediaQueryList.matches);
      };

      updateState();
      mediaQueryList.addListener(updateState);
      return function () {
        mediaQueryList.removeListener(updateState);
      };
    }
  }, [mediaQueryString]);
  return state;
};

export { useMatchMedia as default };
//# sourceMappingURL=index.esm.js.map
