'use strict';

var react = require('react');
var invariant = require('tiny-invariant');

function _interopDefaultLegacy (e) { return e && typeof e === 'object' && 'default' in e ? e : { 'default': e }; }

var invariant__default = /*#__PURE__*/_interopDefaultLegacy(invariant);

var useBrowserLayoutEffect = typeof window !== 'undefined' ? react.useLayoutEffect : function () {};

var useMatchMedia = function useMatchMedia(mediaQueryString, initialState) {
  if (initialState === void 0) {
    initialState = false;
  }

  !(typeof mediaQueryString === 'string') ? process.env.NODE_ENV !== "production" ? invariant__default["default"](false, 'Expected `mediaQueryString` to be a string') : invariant__default["default"](false) : void 0;
  !(typeof initialState === 'boolean') ? process.env.NODE_ENV !== "production" ? invariant__default["default"](false, 'Expected `initialState` to be a boolean') : invariant__default["default"](false) : void 0;

  var _useState = react.useState(initialState),
      state = _useState[0],
      setState = _useState[1];

  useBrowserLayoutEffect(function () {
    if (window.matchMedia) {
      var mediaQueryList = window.matchMedia(mediaQueryString);

      var updateState = function updateState() {
        setState(mediaQueryList.matches);
      };

      updateState();
      mediaQueryList.addListener(updateState);
      return function () {
        mediaQueryList.removeListener(updateState);
      };
    }
  }, [mediaQueryString]);
  return state;
};

module.exports = useMatchMedia;
//# sourceMappingURL=index.cjs.js.map
